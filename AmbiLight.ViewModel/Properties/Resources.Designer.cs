//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmbiLight.ViewModel.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AmbiLight.ViewModel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AmbiLight ähnelt.
        /// </summary>
        internal static string AmbiLightName {
            get {
                return ResourceManager.GetString("AmbiLightName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die AmbiLight (Saturated) ähnelt.
        /// </summary>
        internal static string AmbiLightSaturatedName {
            get {
                return ResourceManager.GetString("AmbiLightSaturatedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays slightly saturated light depending on the main monitors content ähnelt.
        /// </summary>
        internal static string AmbiLightSaturatedToolTip {
            get {
                return ResourceManager.GetString("AmbiLightSaturatedToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light depending on the main monitors content ähnelt.
        /// </summary>
        internal static string AmbiLightToolTip {
            get {
                return ResourceManager.GetString("AmbiLightToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Earth ähnelt.
        /// </summary>
        internal static string EarthName {
            get {
                return ResourceManager.GetString("EarthName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays changing lights from a color palette with brown tone ähnelt.
        /// </summary>
        internal static string EarthToolTip {
            get {
                return ResourceManager.GetString("EarthToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fire ähnelt.
        /// </summary>
        internal static string FireName {
            get {
                return ResourceManager.GetString("FireName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays changing lights from a color palette with red tone ähnelt.
        /// </summary>
        internal static string FireToolTip {
            get {
                return ResourceManager.GetString("FireToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Flash ähnelt.
        /// </summary>
        internal static string FlashName {
            get {
                return ResourceManager.GetString("FlashName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays changing lights from a color palette with yellow tone ähnelt.
        /// </summary>
        internal static string FlashToolTip {
            get {
                return ResourceManager.GetString("FlashToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Leaf ähnelt.
        /// </summary>
        internal static string LeafName {
            get {
                return ResourceManager.GetString("LeafName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays changing lights from a color palette with green tone ähnelt.
        /// </summary>
        internal static string LeafToolTip {
            get {
                return ResourceManager.GetString("LeafToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Music Level ähnelt.
        /// </summary>
        internal static string MusicLevelName {
            get {
                return ResourceManager.GetString("MusicLevelName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Music Level Rainbow ähnelt.
        /// </summary>
        internal static string MusicLevelRainbowName {
            get {
                return ResourceManager.GetString("MusicLevelRainbowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light iterating though all colors depending on the default audio output&apos;s level ähnelt.
        /// </summary>
        internal static string MusicLevelRainbowToolTip {
            get {
                return ResourceManager.GetString("MusicLevelRainbowToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Music Level Single Color ähnelt.
        /// </summary>
        internal static string MusicLevelSingleColorName {
            get {
                return ResourceManager.GetString("MusicLevelSingleColorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light of a given color depending on the default audio output&apos;s level ähnelt.
        /// </summary>
        internal static string MusicLevelSingleColorToolTip {
            get {
                return ResourceManager.GetString("MusicLevelSingleColorToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light of a color depending on the default audio output&apos;s level ähnelt.
        /// </summary>
        internal static string MusicLevelToolTip {
            get {
                return ResourceManager.GetString("MusicLevelToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rainbow ähnelt.
        /// </summary>
        internal static string RainbowName {
            get {
                return ResourceManager.GetString("RainbowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light iterating though all colors ähnelt.
        /// </summary>
        internal static string RainbowToolTip {
            get {
                return ResourceManager.GetString("RainbowToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Single Color ähnelt.
        /// </summary>
        internal static string SingleColorName {
            get {
                return ResourceManager.GetString("SingleColorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays light of a chosen color ähnelt.
        /// </summary>
        internal static string SingleColorToolTip {
            get {
                return ResourceManager.GetString("SingleColorToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Water ähnelt.
        /// </summary>
        internal static string WaterName {
            get {
                return ResourceManager.GetString("WaterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays changing lights from a color palette with blue tone ähnelt.
        /// </summary>
        internal static string WaterToolTip {
            get {
                return ResourceManager.GetString("WaterToolTip", resourceCulture);
            }
        }
    }
}
